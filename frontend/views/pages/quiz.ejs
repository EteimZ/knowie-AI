<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="/dist/styles.css" />
    <script src="/js/script.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Playfair+Display&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&family=Poppins:wght@400;600;700;800&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="container">
      <!--Side bar-->
      <div class="sidebar">
        <div class="sidebar-header">
          <img class="icon-1" src="/images/Logo (1).svg" alt="" />
          <img class="icon-2" src="/images/Knowlee.svg" alt="" />
          <img class="icon-3" src="/images/collapse-icon.svg" alt="" />
        </div>

        <nav>
          <ul>
            <li>
              <img
                src="/images/dashboard-icon.svg"
                class="sidebar-icon"
                alt=""
              />
              <span>Dashboard</span>
            </li>
            <li>
              <img src="/images/notes-icon.svg" class="sidebar-icon" alt="" />
              <span>My Notes</span>
            </li>
            <li class="blue-bordered-list-item">
              <img
                src="/images/ai-tools-icon.svg"
                class="sidebar-icon ai-tools-icon"
                alt=""
              />
              <Span>AI Tools</Span>
              <img src="/images/caret-right.svg" alt="" />
            </li>
            <li>
              <img
                src="/images/settings-icon.svg"
                class="sidebar-icon"
                alt=""
              />
              <span>Settings</span>
            </li>
            <li class="blue-bordered-list-item">
              <img
                src="/images/profile-icon.svg"
                class="sidebar-icon profile-icon"
                alt=""
              />
              <span>Profile</span>
            </li>
            <li>
              <button>
                <img
                  src="/images/log-out-icon.svg"
                  class="logout-icon"
                  alt=""
                />
                <span>Log Out</span>
              </button>
            </li>
          </ul>
        </nav>
      </div>

      <div class="main-section">
        <div class="header">
          <div>
           
          </div>

          <div class="header-icons-container">
            <div class="block-1">
              <img
                src="/images/notifications-icon.svg"
                class="header-icon"
                alt=""
              />
              <img src="/images/plus-icon.svg" class="header-icon" alt="" />
            </div>
            <div class="block-2">
              <img src="/images/premium-icon.svg" class="header-icon" alt="" />
              <span>GPTs</span>
              <img src="/images/caret-right.svg" class="caret-icon" alt="" />
            </div>
          </div>
        </div>

        <!-- Quiz generation section -->
        <div class="quiz-content-container">
          <div class="heading">
              <p>Complete the Quiz Below </p>
          </div>

          <form id="quizForm">
            <div class="quiz-wrapper" id="quizWrapper">
            </div>
            <div id="message" style="display: none;"><%= message %></div>
            <button class="submit-btn" type="submit">Submit</button>
          </form>

    </div>
    </div>

    <script>
      let obj;
      document.addEventListener('DOMContentLoaded', function() {
        const rawText = document.getElementById('message').innerText;
        if (localStorage.getItem("questions") == null) {
          console.log('Getting from Server');
          obj = JSON.parse(rawText);
          console.log(obj.questions);
          localStorage.setItem("questions", JSON.stringify(obj));
        } else { 
          obj = JSON.parse(localStorage.getItem("questions"));
        }
    
        const quizWrapper = document.getElementById('quizWrapper');
    
        obj.questions.forEach((questionObj, index) => {
          const quizContainer = document.createElement('div');
          quizContainer.classList.add('individual-quiz-container');
    
          const questionText = document.createElement('p');
          questionText.textContent = `${index + 1}. ${questionObj.question}`;
          quizContainer.appendChild(questionText);
    
          Object.keys(questionObj.options).forEach((optionKey) => {
            const optionButton = document.createElement('button');
            optionButton.classList.add('btn');
            optionButton.textContent = questionObj.options[optionKey];
            optionButton.setAttribute('data-question', index + 1);
            optionButton.setAttribute('data-option', optionKey);
    
            optionButton.addEventListener('click', function(event) {
              event.preventDefault();
              checkAnswer(index + 1, questionObj.answer, optionKey);
              highlightSelection(index + 1, optionKey);
            });
    
            quizContainer.appendChild(optionButton);
          });
    
          quizWrapper.appendChild(quizContainer);
        });
      });
    
      const result = {}
    
      function checkAnswer(questionNumber, correctAnswer, selectedAnswer) {
        const questionFeedback = {
          selectedAnswer,
          feedback: correctAnswer == selectedAnswer
        }
        result[questionNumber] = questionFeedback 
        return 
      }
    
      function highlightSelection(questionNumber, selectedAnswer) {
        const buttons = document.querySelectorAll(`[data-question="${questionNumber}"]`);
        buttons.forEach(button => {
          if (button.getAttribute('data-option') === selectedAnswer) {
            button.style.backgroundColor = '#7586f3';
            button.style.color = 'white';
          } else {
            button.style.backgroundColor = 'white';
            button.style.color = 'black';
          }
        });
      }
    
      document.getElementById('quizForm').addEventListener('submit', function(event) {
        event.preventDefault();
    
        if (Object.keys(result).length !== obj.questions.length) {
          alert("Answer all questions before submission");
          return;
        }
    
        let score = 0;
        obj.questions.forEach((questionObj, index) => {
          Object.assign(questionObj, result[index + 1]);
          if (questionObj.feedback) {
            score++;
          }
        });
    
        const scoreMessage = `You scored ${score}/${obj.questions.length}`;
        localStorage.setItem('quizScore', score);
        localStorage.setItem('results', JSON.stringify(obj.questions));
    
        window.location.href = '/result';
      });
    </script>

  </body>
</html>

